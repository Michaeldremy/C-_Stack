// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using belt2_exam.Models;

namespace belt2_exam.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200427190220_m11")]
    partial class m11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("belt2_exam.Models.Association", b =>
                {
                    b.Property<int>("AssociationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HobbyId");

                    b.Property<int>("ProficiencyId");

                    b.Property<int>("UserId");

                    b.HasKey("AssociationId");

                    b.HasIndex("HobbyId");

                    b.HasIndex("ProficiencyId");

                    b.HasIndex("UserId");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("belt2_exam.Models.Hobby", b =>
                {
                    b.Property<int>("HobbyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("ProficiencyId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("HobbyId");

                    b.HasIndex("ProficiencyId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Hobbies");
                });

            modelBuilder.Entity("belt2_exam.Models.Proficiency", b =>
                {
                    b.Property<int>("ProficiencyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ProficiencyLevel");

                    b.Property<int?>("UserId");

                    b.HasKey("ProficiencyId");

                    b.HasIndex("UserId");

                    b.ToTable("Proficiencies");
                });

            modelBuilder.Entity("belt2_exam.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("belt2_exam.Models.Association", b =>
                {
                    b.HasOne("belt2_exam.Models.Hobby", "Hobby")
                        .WithMany("AllAssociations")
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("belt2_exam.Models.Proficiency", "Proficiency")
                        .WithMany("AllTheAssociations")
                        .HasForeignKey("ProficiencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("belt2_exam.Models.User", "User")
                        .WithMany("CreatedAssociations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("belt2_exam.Models.Hobby", b =>
                {
                    b.HasOne("belt2_exam.Models.Proficiency", "Proficiency")
                        .WithOne("Hobby")
                        .HasForeignKey("belt2_exam.Models.Hobby", "ProficiencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("belt2_exam.Models.User", "User")
                        .WithMany("CreatedHobbies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("belt2_exam.Models.Proficiency", b =>
                {
                    b.HasOne("belt2_exam.Models.User", "User")
                        .WithMany("CreatedProficiencyLevels")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
